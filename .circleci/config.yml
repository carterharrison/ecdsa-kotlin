version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/ecdsa-kotlin

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle.kts" }}
          - v1-dependencies-

      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

  test:
    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - checkout
      - run:
          name: Code Climate Set Up
          command: |
            # download test reporter as a static binary
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter before-build
      - run:
          name: Test
          command: gradle test
      - run:
          name: Generate code coverage
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
            gradle jacocoTestReport
            JACOCO_SOURCE_PATH=src/main/kotlin ./cc-test-reporter \
            format-coverage ./build/reports/jacoco/test/jacocoTestReport.xml     \
            --input-type jacoco
            ./cc-test-reporter upload-coverage

      - store_artifacts:
          path: ~/junit
      - store_test_results:
          path: ~/junit

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
